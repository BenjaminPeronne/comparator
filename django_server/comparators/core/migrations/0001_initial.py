# Generated by Django 5.1.6 on 2025-02-13 01:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Capacity',
            fields=[
                ('id', models.AutoField(db_column='id_capacity', primary_key=True, serialize=False)),
                ('label', models.CharField(db_column='label', max_length=255)),
            ],
            options={
                'db_table': 'capacity',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(db_column='id_category', primary_key=True, serialize=False)),
                ('category_name', models.CharField(db_column='label', max_length=255)),
            ],
            options={
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='ProductState',
            fields=[
                ('id', models.AutoField(db_column='id_state', primary_key=True, serialize=False)),
                ('state_label', models.CharField(db_column='label', max_length=255)),
            ],
            options={
                'db_table': 'product_state',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(db_column='id_store', primary_key=True, serialize=False)),
                ('store_label', models.CharField(db_column='label', max_length=127)),
                ('address', models.CharField(db_column='address', max_length=255)),
                ('postal_code', models.CharField(db_column='postal_code', max_length=10)),
                ('city', models.CharField(db_column='city', max_length=50)),
                ('country', models.CharField(db_column='country', default='France', max_length=255)),
                ('longitude', models.DecimalField(db_column='longitude', decimal_places=6, max_digits=9)),
                ('latitude', models.DecimalField(db_column='latitude', decimal_places=6, max_digits=9)),
                ('store_creation_date', models.DateTimeField(auto_now_add=True, db_column='create_date')),
                ('store_modification_date', models.DateTimeField(auto_now=True, db_column='update_date')),
            ],
            options={
                'db_table': 'store',
            },
        ),
        migrations.CreateModel(
            name='TaxeRate',
            fields=[
                ('id', models.AutoField(db_column='id_taxe_rate', primary_key=True, serialize=False)),
                ('label', models.CharField(db_column='label', max_length=255)),
                ('value', models.DecimalField(db_column='value', decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'taxe_rate',
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.AutoField(db_column='id_unit_of_measure', primary_key=True, serialize=False)),
                ('label', models.CharField(db_column='label', max_length=255)),
            ],
            options={
                'db_table': 'unit_of_measure',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(db_column='id_product', primary_key=True, serialize=False)),
                ('product_label', models.CharField(db_column='product_label', max_length=255)),
                ('ticket_label', models.CharField(blank=True, db_column='ticket_label', max_length=255, null=True)),
                ('barcode', models.CharField(db_column='barcode', max_length=255)),
                ('image', models.CharField(blank=True, db_column='image', max_length=255, null=True)),
                ('generic_label_id', models.CharField(blank=True, db_column='generic_label_id', max_length=255, null=True)),
                ('product_creation_date', models.DateTimeField(auto_now_add=True, db_column='product_creation_date')),
                ('product_modification_date', models.DateTimeField(auto_now=True, db_column='product_modification_date')),
                ('id_capacity', models.ForeignKey(blank=True, db_column='id_capacity', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.capacity')),
                ('id_category', models.ForeignKey(blank=True, db_column='id_category', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category')),
                ('id_state', models.ForeignKey(blank=True, db_column='id_state', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.productstate')),
                ('uom_id', models.ForeignKey(blank=True, db_column='uom_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.unitofmeasure')),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='RelStorePrice',
            fields=[
                ('id', models.AutoField(db_column='id_store_price', primary_key=True, serialize=False)),
                ('price', models.DecimalField(db_column='price', decimal_places=2, max_digits=10)),
                ('price_exclude', models.DecimalField(blank=True, db_column='price_exclude', decimal_places=2, max_digits=10, null=True)),
                ('discounted_price', models.DecimalField(blank=True, db_column='discounted_price', decimal_places=2, max_digits=10, null=True)),
                ('is_discount', models.BooleanField(db_column='is_discount', default=False)),
                ('proof', models.CharField(blank=True, db_column='proof', max_length=255, null=True)),
                ('price_creation_date', models.DateTimeField(auto_now_add=True, db_column='create_date')),
                ('price_modification_date', models.DateTimeField(auto_now=True, db_column='update_date')),
                ('id_product', models.ForeignKey(db_column='id_product', on_delete=django.db.models.deletion.CASCADE, to='core.product')),
                ('id_store', models.ForeignKey(db_column='id_store', on_delete=django.db.models.deletion.CASCADE, to='core.store')),
                ('taxe_rate_id', models.ForeignKey(blank=True, db_column='taxe_rate_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.taxerate')),
            ],
            options={
                'db_table': 'rel_store_price',
            },
        ),
    ]
